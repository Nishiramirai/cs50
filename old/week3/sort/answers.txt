sort1 uses: Bubble Sort

How do you know?: The execution time of the algorithm increases exponentially as the data size increases,
but data that is already sorted sorting very quickly, so this is bubble sort with O(n^2) and Omega(n)
    random:
        5000: 0.108s
       10000: 0.327s
       50000: 7.796s

    reversed:
        5000: 0.101s
       10000: 0.271s
       50000: 5.916s

    sorted:
        5000: 0.059s
       10000: 0.182s
       50000: 0.579s

sort2 uses: Merge Sort
How do you know?: the fastest algorithm with random data, sorting already sorted and unsorted data is taking almost the same time,
so this is Merge Sort with O(n log b) and Omega(n log n)
    random:
        5000: 0.40s
       10000: 0.79s
       50000: 0.452s

    reversed:
        5000: 0.057s
       10000: 0.080s
       50000: 0.434s

    sorted:
        5000: 0.038s
       10000: 0.059s
       50000: 0.565s

sort3 uses: Selection Sort
How do you know?: The execution time of the algorithm increases exponentially as the data size increases,
sorting already sorted and unsorted data is taking almost the same time, so this is Selection Sort with O(n^2) and Omega(n^2)
    random:
        5000: 0.70s
       10000: 0.167s
       50000: 2.878s

    reversed:
        5000: 0.053s
       10000: 0.199s
       50000: 3.089s

    sorted:
        5000: 0.050s
       10000: 0.182s
       50000: 3.112s
